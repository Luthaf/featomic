name: Test

on:
  push:
    branches: [master]
  pull_request:
    # Check all PR

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} / rust ${{ matrix.rust-version }}
    container: ${{ matrix.container }}
    strategy:
      matrix:
        include:
          - os: ubuntu-18.04
            rust-version: 1.42
            # check the build on a stock Ubuntu 18.04, including cmake 3.10
            container: ubuntu:18.04
            rust-target: x86_64-unknown-linux-gnu
          - os: ubuntu-18.04
            rust-version: stable
            rust-target: x86_64-unknown-linux-gnu
          - os: ubuntu-18.04
            rust-version: beta
            rust-target: x86_64-unknown-linux-gnu
          - os: macos-10.15
            rust-version: stable
            rust-target: x86_64-apple-darwin
    steps:
      - name: install dependencies in container
        if: matrix.container == 'ubuntu:18.04'
        run: |
          apt-get update
          apt-get install -y software-properties-common
          add-apt-repository -y ppa:git-core/ppa
          apt-get update
          apt-get install -y cmake make gcc g++ git curl
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: setup rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust-version }}
          target: ${{ matrix.rust-target }}
      - name: install tests dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox
      - name: run tests in debug mode
        run: cargo test --target ${{ matrix.rust-target }} -- --test-threads=2
      - name: run tests in release mode
        run: cargo test --release --target ${{ matrix.rust-target }} -- --test-threads=2
